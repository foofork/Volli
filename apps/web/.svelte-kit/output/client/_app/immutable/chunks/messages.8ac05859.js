import{d,w as M}from"./index.045fc982.js";import{v as c}from"./vault.4a87f3ed.js";function y(){const{subscribe:n,set:C,update:o}=M({conversations:new Map,messages:new Map,activeConversationId:null,isLoading:!1,error:null});async function m(){o(e=>({...e,isLoading:!0,error:null}));try{const e=await c.query("messages",{type:"conversation"}),a=new Map;e.forEach(s=>{a.set(s.id,s)}),o(s=>({...s,conversations:a,isLoading:!1}))}catch(e){o(a=>({...a,isLoading:!1,error:e instanceof Error?e.message:"Failed to load conversations"}))}}async function g(e){try{const a=await c.query("messages",{conversationId:e,type:"message"});o(s=>{const t=new Map(s.messages);return t.set(e,a),{...s,messages:t}})}catch(a){o(s=>({...s,error:a instanceof Error?a.message:"Failed to load messages"}))}}async function w(e,a){const s={id:crypto.randomUUID(),type:e.length>2?"group":"direct",participants:e,createdAt:new Date,updatedAt:new Date,metadata:{name:a||`Chat with ${e.join(", ")}`,avatar:"",description:""}};return await c.store("messages",{...s,type:"conversation"}),o(t=>{const r=new Map(t.conversations);return r.set(s.id,s),{...t,conversations:r}}),s.id}async function l(e,a){const s={id:crypto.randomUUID(),conversationId:e,senderId:"current-user",content:a,timestamp:new Date,status:"sent",version:1};await c.store("messages",{...s,type:"message"}),o(t=>{const r=new Map(t.messages),f=r.get(e)||[];r.set(e,[...f,s]);const v=new Map(t.conversations),i=v.get(e);return i&&(i.lastMessage=s,i.updatedAt=new Date,v.set(e,i)),{...t,messages:r,conversations:v}})}function p(e){o(a=>({...a,activeConversationId:e})),e&&g(e)}return{subscribe:n,loadConversations:m,loadMessages:g,createConversation:w,sendMessage:l,setActiveConversation:p}}const u=y(),b=d(u,n=>n.activeConversationId?n.conversations.get(n.activeConversationId):null),A=d(u,n=>n.activeConversationId?n.messages.get(n.activeConversationId)||[]:[]);export{b as a,A as b,u as m};
//# sourceMappingURL=messages.8ac05859.js.map
