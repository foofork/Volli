{"version":3,"file":"auth.js","sources":["../../../../src/lib/stores/auth.ts"],"sourcesContent":["import { writable, derived } from 'svelte/store';\n\n// Local type definitions to avoid cross-package imports\ninterface Identity {\n\tid: string;\n\tpublicKey: Uint8Array;\n\tdevices: Device[];\n\tcreatedAt: Date;\n\trecoveryKey: Uint8Array;\n}\n\ninterface Device {\n\tid: string;\n\tname: string;\n\tpublicKey: Uint8Array;\n\ttype: 'primary' | 'secondary';\n\tplatform: string;\n\tlastSeen: Date;\n\tcapabilities: string[];\n}\n\ninterface AuthState {\n\tidentity: Identity | null;\n\tdevice: Device | null;\n\tisAuthenticated: boolean;\n\tisLoading: boolean;\n\terror: string | null;\n}\n\nfunction createAuthStore() {\n\tconst { subscribe, set, update } = writable<AuthState>({\n\t\tidentity: null,\n\t\tdevice: null,\n\t\tisAuthenticated: false,\n\t\tisLoading: false,\n\t\terror: null\n\t});\n\n\tasync function initialize() {\n\t\tupdate(state => ({ ...state, isLoading: true, error: null }));\n\t\t\n\t\ttry {\n\t\t\t// Check for existing identity in localStorage\n\t\t\tconst storedIdentity = localStorage.getItem('volli_identity');\n\t\t\tif (storedIdentity) {\n\t\t\t\tconst identity = JSON.parse(storedIdentity);\n\t\t\t\tupdate(state => ({\n\t\t\t\t\t...state,\n\t\t\t\t\tidentity,\n\t\t\t\t\tisAuthenticated: true,\n\t\t\t\t\tisLoading: false\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tupdate(state => ({ ...state, isLoading: false }));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tupdate(state => ({\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: error instanceof Error ? error.message : 'Failed to initialize'\n\t\t\t}));\n\t\t}\n\t}\n\n\tasync function createIdentity(displayName: string) {\n\t\tupdate(state => ({ ...state, isLoading: true, error: null }));\n\t\t\n\t\ttry {\n\t\t\t// Create mock identity for now (will use real @volli/identity-core later)\n\t\t\tconst identity: Identity = {\n\t\t\t\tid: crypto.randomUUID(),\n\t\t\t\tpublicKey: new Uint8Array(32),\n\t\t\t\tdevices: [],\n\t\t\t\tcreatedAt: new Date(),\n\t\t\t\trecoveryKey: new Uint8Array(32)\n\t\t\t};\n\t\t\t\n\t\t\tconst device: Device = {\n\t\t\t\tid: crypto.randomUUID(),\n\t\t\t\tname: displayName,\n\t\t\t\tpublicKey: new Uint8Array(32),\n\t\t\t\ttype: 'primary',\n\t\t\t\tplatform: 'web',\n\t\t\t\tlastSeen: new Date(),\n\t\t\t\tcapabilities: ['messaging', 'storage']\n\t\t\t};\n\t\t\t\n\t\t\t// Store in localStorage\n\t\t\tlocalStorage.setItem('volli_identity', JSON.stringify(identity));\n\t\t\tlocalStorage.setItem('volli_device', JSON.stringify(device));\n\t\t\t\n\t\t\tupdate(state => ({\n\t\t\t\t...state,\n\t\t\t\tidentity,\n\t\t\t\tdevice,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tisLoading: false\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\tupdate(state => ({\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: error instanceof Error ? error.message : 'Failed to create identity'\n\t\t\t}));\n\t\t}\n\t}\n\n\tasync function logout() {\n\t\tlocalStorage.removeItem('volli_identity');\n\t\tlocalStorage.removeItem('volli_device');\n\t\tlocalStorage.removeItem('volli_vault_key');\n\t\t\n\t\tset({\n\t\t\tidentity: null,\n\t\t\tdevice: null,\n\t\t\tisAuthenticated: false,\n\t\t\tisLoading: false,\n\t\t\terror: null\n\t\t});\n\t}\n\n\treturn {\n\t\tsubscribe,\n\t\tinitialize,\n\t\tcreateIdentity,\n\t\tlogout\n\t};\n}\n\nexport const auth = createAuthStore();\nexport const isAuthenticated = derived(auth, $auth => $auth.isAuthenticated);"],"names":[],"mappings":";AA6BA,SAAS,kBAAkB;AAC1B,QAAM,EAAE,WAAW,KAAK,OAAA,IAAW,SAAoB;AAAA,IACtD,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,OAAO;AAAA,EAAA,CACP;AAED,iBAAe,aAAa;AACpB,WAAA,CAAA,WAAU,EAAE,GAAG,OAAO,WAAW,MAAM,OAAO,KAAO,EAAA;AAExD,QAAA;AAEG,YAAA,iBAAiB,aAAa,QAAQ,gBAAgB;AAC5D,UAAI,gBAAgB;AACb,cAAA,WAAW,KAAK,MAAM,cAAc;AAC1C,eAAO,CAAU,WAAA;AAAA,UAChB,GAAG;AAAA,UACH;AAAA,UACA,iBAAiB;AAAA,UACjB,WAAW;AAAA,QACV,EAAA;AAAA,MAAA,OACI;AACN,eAAO,YAAU,EAAE,GAAG,OAAO,WAAW,MAAQ,EAAA;AAAA,MACjD;AAAA,aACQ,OAAO;AACf,aAAO,CAAU,WAAA;AAAA,QAChB,GAAG;AAAA,QACH,WAAW;AAAA,QACX,OAAO,iBAAiB,QAAQ,MAAM,UAAU;AAAA,MAC/C,EAAA;AAAA,IACH;AAAA,EACD;AAEA,iBAAe,eAAe,aAAqB;AAC3C,WAAA,CAAA,WAAU,EAAE,GAAG,OAAO,WAAW,MAAM,OAAO,KAAO,EAAA;AAExD,QAAA;AAEH,YAAM,WAAqB;AAAA,QAC1B,IAAI,OAAO,WAAW;AAAA,QACtB,WAAW,IAAI,WAAW,EAAE;AAAA,QAC5B,SAAS,CAAC;AAAA,QACV,+BAAe,KAAK;AAAA,QACpB,aAAa,IAAI,WAAW,EAAE;AAAA,MAAA;AAG/B,YAAM,SAAiB;AAAA,QACtB,IAAI,OAAO,WAAW;AAAA,QACtB,MAAM;AAAA,QACN,WAAW,IAAI,WAAW,EAAE;AAAA,QAC5B,MAAM;AAAA,QACN,UAAU;AAAA,QACV,8BAAc,KAAK;AAAA,QACnB,cAAc,CAAC,aAAa,SAAS;AAAA,MAAA;AAItC,mBAAa,QAAQ,kBAAkB,KAAK,UAAU,QAAQ,CAAC;AAC/D,mBAAa,QAAQ,gBAAgB,KAAK,UAAU,MAAM,CAAC;AAE3D,aAAO,CAAU,WAAA;AAAA,QAChB,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA,iBAAiB;AAAA,QACjB,WAAW;AAAA,MACV,EAAA;AAAA,aACM,OAAO;AACf,aAAO,CAAU,WAAA;AAAA,QAChB,GAAG;AAAA,QACH,WAAW;AAAA,QACX,OAAO,iBAAiB,QAAQ,MAAM,UAAU;AAAA,MAC/C,EAAA;AAAA,IACH;AAAA,EACD;AAEA,iBAAe,SAAS;AACvB,iBAAa,WAAW,gBAAgB;AACxC,iBAAa,WAAW,cAAc;AACtC,iBAAa,WAAW,iBAAiB;AAErC,QAAA;AAAA,MACH,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,OAAO;AAAA,IAAA,CACP;AAAA,EACF;AAEO,SAAA;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEF;AAEO,MAAM,OAAO,gBAAgB;AACL,QAAQ,MAAM,CAAA,UAAS,MAAM,eAAe;"}